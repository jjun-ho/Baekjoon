#1463

n = int(input())
dp = [0 for _ in range(n + 1)]  # n+1 개 만큼의 0으로 이루어진 배열 만들기. dp[0], dp[1] = 0
for i in range(2, n + 1):  # dp라는 배열의 index = 문제의 입력 n과 대
    dp[i] = dp[i - 1] + 1 # dp[i]가 2와 3으로 나누어 떨어지지 않는 경우 -> 무조건 -1 = 연산 횟수 +1
# dp[i]가 2 와 3으로 나누어 떨어지는 경우에는
# 1을 빼는 것 보다 나누어 떨어지는게 훨씬 이득이기 때문에 min(dp[i], dp[i//2]+1)을 통해 최소값을 선택하면 된다.
    if i % 2 == 0 and dp[i] > dp[i // 2] + 1:
        dp[i] = dp[i // 2] + 1
    if i % 3 == 0 and dp[i] > dp[i // 3] + 1:
        dp[i] = dp[i // 3] + 1
print(dp[n])

"""
10 -> 9 -> 3 -> 1
10을 구할 때는 9의 결과를, 9를 구할 때는 3의 결과를 이용한다.
N이라는 수는 N//3을 연산전으로 돌리면, 즉 횟수 +1을 하면 만들 수 있다.
N이라는 수는 N//2을 연산전으로 돌리면, 즉 횟수 +1을 하면 만들 수 있다.
N이라는 수는 N-1을 연산전으로 돌리면, 즉 횟수 +1을 하면 만들 수 있다.
점화식 : dp(N) = min ( dp(N//3) +1, dp(N//2)+1 , dp(N-1)+1 )
"""